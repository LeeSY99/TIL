**합성곱** - 입력 데이터와 필터를 곱하고 더해서 특징을 추출하는 연산

**합성곱을 쓰는 이유**

1. 지역적 특징 추출 - 전체 이미지를 한번에 보지 않고 작은 영역만 집중에서 특징을 찾음
2. 가중치 공유 - 같은 커널을 이미지 전체에 적용 → 파라미터 수 감소

**특성맵** - 합성곱 연산을 수행한 결과

합성곱 신경망은 합성곱으로 특징을 추출 → 활성화 함수 적용 → 풀링 

**패딩** - 입력 배열 주위를 가상의 원소로 채우는 것 (0으로 채움)

**세임 패딩** → 입력과 특성맵의 크기를 같도록 하게 패딩하는 방식

**밸리드 패딩** → 순수한 입력 배열에서만 합성곱을 해 특성맵을 만드는 방식

**패딩을 하는 이유** → 가장자리는 합성곱 필터가 거치는 횟수가 적기 때문에 특성이 반영이 잘 안될 수 있음

**스트라이드** - 필터가 이동하는 크기

**풀링** - 합성곱 층에서 만든 특성 맵의 가로세로 크기를 줄임

계산량 감소, 과적합 방지, 특징의 위치 변화에 대한 강건성(같은 특징 이미지의 약간 다른 위치에 있어도 인식 가능)

**풀링 방식**

**max pooling** → 특징의 강한 신호만 보존

**average pooling** → 특징 전체를 부드럽게 요약

**global pooling** → 전체 특징 맵에서 하나의 값만 출력
